package syntax;
/*
 * @ Date	: 20150623
 * @ Author : 최승현
 * @ Story	: 상수(inhebitance) 문법
 */
public class Inhebitance {
	/*
	 * 상속의 개념
	 * - 코드를 상속, 자원을 상속
	 * - 기존의 구현 로직을 변경하는 것이 아니라 새로운 기능을
	 * 		새로 추가한 글래스를 더하는 것
	 * - 상속은 한번에 하나의 클래스에서만 가능..C++ 에서는 다중 상속 가능
	 * - 형식 : 자식Class (sub class)
	 * 			부모Class (super class)
	 * 			public class sub-class extends super-class
	 * - 자식클래스 객체를 생성시 부모 클래스 객체의 생성자가 먼저 호출된다.
	 * - Default Constructor (기본생성자) 에 주의
	 * - 상속의 경우 속성을 상속하는 경우 보다는 메소드를 상속하기 위해
	 * 		많이 사용되고, 부모 클래스의 기능을 확장하는데 부모클래스를
	 * 			수정하지 않고, 부모에 구현된 로직을 사용하면서 안정적으로
	 * 			클래스의 기능을 확장 할 수 있는 기법에 해당한다.
	 * - 상속을 계속적으로 하게 될 경우 가장 아래의 클래스는 부모로부터
	 * 			많은 메소드를 상속받음으로써 매우 많은 기능을
	 * 			사용할 수 있게 된다.
	 */
}
